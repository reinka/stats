else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in list){
res = res + sum(length(list[[count]])*(i - means)^2)
count = count +1
}
res = res
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev(list(p,d1,d2,d3), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + sum(length(list[[count]])*(i - means)^2)
count = count +1
}
res = res
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + length(list[[count]])*(i - means)^2
count = count +1
}
res = res
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(p,d1,d2,d3), within = F)
sqrt_dev(list(a,b,c), within = F)
mean(sapply(list(p,d1,d2,d3),mean))
sapply(list(p,d1,d2,d3),mean)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + length(list[[count]])*(i - means)^2
count = count +1
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(p,d1,d2,d3), within = F)
test <- sapply(list(p,d1,d2,d3),mean)
test - mean(sapply(p,d1,d2,d3),mean)
test - mean(sapply(list(p,d1,d2,d3),mean)
)
test**2
sum(test**2)
for(i in test**2){}
count = 1
ls <- list(p,d1,d2,d3)
for(i in test**2){length(ls[[count]])*i;count=count+1}
for(i in test**2){length(ls[[count]])*i}
ls[[count]]
ls[count]
ls
count
count <- 1
count <- 1
count
in <- 1:10
inc <- 1:10
inc
test
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
index = 1:length(temp)
for (i in index){
res = res + length(list[[i]])*(temp[i] - means)^2
count = count +1
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev(list(p,d1,d2,d3), within = F)
sapply(list(p,d1,d2,d3),length)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
index = 1:length(temp)
for (i in index){
res = res + n*(temp[i] - means)^2
count = count +1
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(p,d1,d2,d3), within = F)
sqrt_dev(list(a,b,c), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
index = 1:length(temp)
for (i in temp){
res = res + n*(temp - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
index = 1:length(temp)
for (i in temp){
res = res + n*(i - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + n*(i - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
sum(res)
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev(list(p,d1,d2,d3), within = F)
sqrt_dev(list(a,b,c), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + n*(i - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev(list(p,d1,d2,d3), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + sum(n*(i - means)^2)
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(p,d1,d2,d3), within = F)
sqrt_dev(list(a,b,c), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + n*(i - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + n*(i - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
#res
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + n*(i - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
res
}
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + n*(i - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
class(res)
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
for (i in temp){
res = res + n*(i - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
unclass(res)
}
sqrt_dev(list(a,b,c), within = F)
sqrt_dev(list(p,d1,d2,d3), within = F)
test
test[1]
test <- sapply(list(a,b,c),mean)
test
test[1]
class(test)
sqrt_dev <- function(list, means=0, within=TRUE){
res = 0
count = 1
n = sapply(list,length)
if (means == 0 & within){
means = sapply(list, mean)
count = 1
for (i in list){
res = res + sum((i - means[count])^2)
count = count + 1
}
}
else if (!within){
temp = sapply(list, mean)
means = mean(temp)
index = 1:length(temp)
for (i in index){
res = res + n[i]*(temp[i] - means)^2
}
}
else{
for (i in list){
res = res + sum((i - means)^2)
}
}
unclass(res)
}
sqrt_dev(list(p,d1,d2,d3), within = F)
sqrt_dev(list(a,b,c), within = F)
sqrt_dev(list(1.5,1.6,1.614,2.875), within = F)
sqrt_dev(list(a,b,c))
sqrt_dev(list(p,d1,d2,d3))
5.45/3
sqrt_dev(list(p,d1,d2,d3))/16
(5.54/3)/sqrt_dev(list(p,d1,d2,d3))/16
(5.54/3)/(sqrt_dev(list(p,d1,d2,d3))/16)
5.45/sum(5.45,.836)
save.image("lesson12.RData")
getwd()
rm("lesson12.RData")
rm(lesson12.RData)
save.image("lesson13.RData")
file.remove("lesson12.RData")
list.files()
rm(list=ls())
