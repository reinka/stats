limited
limited <- matrix[26,][1:2]
limited
matrix[26:]
matrix[26,]
limited <- matrix[26:][,]
limited <- matrix[26:44][,]
limited <- matrix[26:44,]
limited
limited
sum(limited[limited[,limited==1][,]])
sum(limited[,limited==1][,]])
sum(limited[,limited==1][,])
limited[,limited==1]
limited[limited==1,]
democrats <- sum(limited[limited==1, ])
democrats
rep <- sum(limited[limited==6, ])
rep
(limited[limited==6, ]
)
rep <- sum(limited[limited==6, !is.na(limited)])
rep <- sum(limited[limited==6 && !is.na(limited), ])
rep
limited[limited==6 && !is.na(limited), ]
limited[limited==6 & !is.na(limited), ]
limited[limited==6 & is.na(limited), ]
?man
?mean
meanRep <- mean(limited[limited==6,], na.rm = TRUE)
(limited[limited==6,]
)
meanRep <- mean(limited[limited==6,2], na.rm = TRUE)
meanDem <- mean(limiited[limited==1,2], na.rm = T)
meanDem <- mean(limiited[limited==1,2], na.rm = TRUE)
meanDem <- mean(limited[limited==1,2], na.rm = T)
meanDem
meanRep
factorial(49) / (factorial(6) * factorial(49-6))
lotto <- factorial(49) / (factorial(6) * factorial(49-6))
lotto <- factorial(49) / (factorial(5) * factorial(49-5))
lotto
lotto <- factorial(49) / (factorial(1) * factorial(49-1))
lotto
lotto <- function(n) {
factorial(49) / (factorial(n) * factorial(49-n))
}
lotto(6)
lotto(1)
lotto(2)
lotto(3)
lotto(4)
lotto(5)
lotto <- function(n,k) {
factorial(n) / (factorial(k) * factorial(n-k))
}
lotto(49,6)
lotto(44,6)
1/lotto(44,6)
12.5/180
.6 * 2.5 + 0.4
2.0*.6 + .4
1.8*.6+.4
r <- function(x, y, vec) {
m <- mean(vec)
n <- length(vec)
sd_x <- (x-m)^2 / n
sd_y <- (y-m)^2 / n
z_x <- (x-m) / sd_x
z_y <- (y - m) / sd_y
sum(z_y*z_x)/(n-1)
}
r(5,6,4:6)
4:6
r(5,6,c(4,5,6))
mean(4:6)
2^2
(4-mean(4:6)^2)
((4-mean(4:6))^2)
((4-mean(4:6))^2)/length(4:6)
((5-mean(4:6))^2)/length(4:6)
?cor
cor(4:6)
cor(4:6, 4)
cor(c(4,5,6),4)
cor(c(5,5,4,2,1),c(6,6,4,2,4))
cor(c(5,4,4,2,1),c(6,6,4,2,4))
r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- (x - m_x)^2 / n
sd_y <- (y - m_y)^2 / n
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / (n - 1)
}
r(c(5,4,4,2,1),c(6,6,4,2,4))
r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- (x - m_x)^2 / n
sd_y <- (y - m_y)^2 / n
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / (n - 1)
z_x
}
r(c(5,4,4,2,1),c(6,6,4,2,4))
r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- sum((x - m_x)^2) / n
sd_y <- sum((y - m_y)^2) / n
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / (n - 1)
}
r(c(5,4,4,2,1),c(6,6,4,2,4))
r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- sum((x - m_x)^2) / n
sd_y <- sum((y - m_y)^2) / n
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / (n - 1)
sd_x
}
r(c(5,4,4,2,1),c(6,6,4,2,4))
cor()
cor()
r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- sqrt(sum((x - m_x)^2) / n)
sd_y <- sqrt(sum((y - m_y)^2) / n)
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / (n - 1)
}
r(c(5,4,4,2,1),c(6,6,4,2,4))
r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- sqrt(sum((x - m_x)^2) / n)
sd_y <- sqrt(sum((y - m_y)^2) / n)
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / (n)
}
r(c(5,4,4,2,1),c(6,6,4,2,4))
r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- sqrt(sum((x - m_x)^2) / n-1)
sd_y <- sqrt(sum((y - m_y)^2) / n-1)
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / n-1
}
r(c(5,4,4,2,1),c(6,6,4,2,4))
sd_x <- sqrt(sum((x - m_x)^2) / n)
person_r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- sqrt(sum((x - m_x)^2) / n)
sd_y <- sqrt(sum((y - m_y)^2) / n)
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / n
}
person_r(c(5,4,4,2,1),c(6,6,4,2,4))
cor(c(5,4,4,2,1),c(6,6,4,2,4))
pearson_r <- function(x, y) {
m_x <- mean(x)
m_y <- mean(y)
n <- length(x)
sd_x <- sqrt(sum((x - m_x)^2) / n)
sd_y <- sqrt(sum((y - m_y)^2) / n)
z_x <- (x - m_x) / sd_x
z_y <- (y - m_y) / sd_y
sum(z_y * z_x) / n
}
pearson_r(c(5,4,4,2,1),c(6,6,4,2,4))
0.6*2+0.4
plot[(H-0.5)/(H-1), H, 0, -2]
H<- -2:0
plot[(H-0.5)/(H-1), H, 0, -2]
?plot
plot[(H-0.5)/(H-1)]
H
plot(-2:0, -2:0, type = 'n', xlab = '', ylab = '')
curve((x-.5/(x-1)))
curve(((x-.5)/(x-1)))
curve((x-.5)/(x-1))
?xlab
?plot
plot(-2:0, -2:0, type = 'n', xlab = '', ylab = '', asp = '1')
plot(-2:0, -2:0, type = 'n', xlab = '', ylab = '', asp = '')
curve((x-.5)/(x-1))
curve((y-.5)/(y-1))
plot(-2:0, -2:0, type = 'n', xlab = '', ylab = '', asp = '')
curve((x-.5)/(x-1), from = -2, to = 0)
require(cowplot)
install.packages('cowplot')
require(cowplot)
require(grid)
theme_set(theme_cowplot(font_size = 12))
p1 <- ggplot(mtcars, aes(P,H)) + geom_line(colour = 'blue')
ggdraw(switch_axis_position(p1 + theme_gray(), axis = 'y'))
p1 <- curve((x-.5)/(x-1), from = -2, to = 0)
ggdraw(switch_axis_position(p1 + theme_gray(), axis = 'y'))
?ggplot
p1
p2 <- ggplot(p1, aes(P,H)) + geom_line(colour = 'blue')
df <- data.frame(p1)
df
p2 <- ggplot(df, aes(P,H)) + geom_line(colour = 'blue')
ggdraw(switch_axis_position(p1 + theme_gray(), axis = 'y'))
ggdraw(switch_axis_position(p2 + theme_gray(), axis = 'y'))
require(cowplot)
require(grid)
theme_set(theme_cowplot(font_size = 12))
p2 <- ggplot(p1, aes(x,y)) + geom_line(colour = 'blue')
p2 <- ggplot(df) + geom_line(colour = 'blue')
ggdraw(switch_axis_position(p2 + theme_gray(), axis = 'y'))
p2
plot(df)
ggdraw(switch_axis_position(plot(df)), axis = 'y')
ggdraw(switch_axis_position(plot(df), axis = 'y')
)
)
))
cd
ggdraw(switch_axis_position(plot(df), axis = 'y'))
p2 <- ggplot(df, aes (x)) + geom_line(colour = 'blue')
p2
p2 <- ggplot(df, aes (x,y)) + geom_line(colour = 'blue')
p2
gggdraw(switch_axis_position(p2 + theme_gray(), axis = 'y'))
ggdraw(switch_axis_position(p2 + theme_gray(), axis = 'y'))
df
`colnames<-`(df, c(H, P))
`colnames<-`(df, c('H', 'P'))
p2 <- ggplot(df, aes (x,y)) + geom_line(colour = 'blue')
p2 <- ggplot(df, aes (H,P)) + geom_line(colour = 'blue')
ggdraw(switch_axis_position(p2 + theme_gray(), axis = 'P'))
ggdraw(switch_axis_position(p2 + theme_gray(), axis = 'y'))
p2 <- ggplot(df, aes (H,P)) + geom_line(colour = 'blue' + ylab("Probability P")) + xlab("H")
p2 <- ggplot(df, aes (H,P)) + geom_line(colour = 'blue') + ylab("Probability P")) + xlab("H")
p2
p2 <- ggplot(df, aes (x,y)) + geom_line(colour = 'blue')
p2
p2 + ylab('Probability P') + xlab("H")
ggdraw(switch_axis_position(p2 + theme_gray(), axis = 'y'))
ggdraw(switch_axis_position(p2 + theme_gray() + ylab("Probability P")) + xlab("H"), axis = 'y'))
plt <- ggdraw(switch_axis_position(p2 + theme_gray(), axis = 'y'))
plt
plt + ylab('Probability P') + xlab("H")
p2
plt <- p2 + ylab('Probability P') + xlab("H")
plt
plt <- ggdraw(switch_axis_position(plt + theme_gray(), axis = 'y'))
plt
plt
plt <- plt + geom_text(label = "P = (H-0.5)/(H-1)")
plt
plt <- plt + geom_text(label = "P = (H-0.5)/(H-1)", parse = True)
plt <- plt + geom_text(label = "P = (H-0.5)/(H-1)", parse = TRUE)
plt
grid.text("P = (H-0.5)/(H-1)", x = 0.3, y=0.8)
grid.text("P = (H-0.5)/(H-1)", x = 0.8, y=0.8)
grid.text("P = frac((H-0.5),(H-1))", x = 0.8, y=0.8)
grid.text(frac((H-0.5),(H-1)), x = 0.8, y=0.8)
grid.text(expression(P == frac((H-0.5),(H-1))), x = 0.8, y=0.8)
grid.text(expression(P == frac(H-0.5,H-1)), x = 0.7, y=0.8)
plt <- p2 + ylab('Probability P') + xlab("Expected harm H")
plt <- ggdraw(switch_axis_position(plt + theme_gray(), axis = 'y'))
grid.text(expression(P == frac(H-0.5,H-1)), x = 0.7, y=0.8)
plt
grid.text(expression(P == frac(H-0.5,H-1)), x = 0.7, y=0.8)
ls()
rm(list = ls())
ls
p_infarkt_bedingung_placebo
p_infarkt_bedingung_placebo <- .017
p_infarkt_bedingung_aspirin <- .009
.88 * .09
.9 + (.88*0.9)
-.008/.009
.9*.89
.008 / .017
.017*.047
.017*.47
.08+.08*.89
.09+.09*.89
t1 <- c(3,4,5,6,8,16)
t2 <- c(5,6,2,4,24,90)
mean(t1)
mean(t2)
sd_t1 <- (t1-mean(t1))/length(t1)
sd_t1
sd(t1)
sd_t1 <- (sum((t1-mean(t1))^2)/length(t1)
sd_t1
sd_t1 <- (sum((t1-mean(t1))^2)/length(t1))
sd_t1
sd_t1 <- (sum((t1-mean(t1))^2)/(length(t1)+1))
sd_t1
sd_t1 <- (sum((t1-mean(t1))^2)/(length(t1)+1))
sd
var()
var
sd_t1 <- (sum((t1-mean(t1))^2)/length(t1)
)
sd_t1
sqrt
sqrt(sd_t1)
sd(t1)
sqrt(18)
sum(sd(t1)*sd(t2))/length(t1)
sd_t1 <- (sum((t1-mean(t1))^2)/(length(t1)-1))
sd_t1
sqrt(sd_t1)
sd(t1)
sum((t1-mean(t1)*(t2-mean(t2))))/(sqrt(sum((t1-mean(t1))^2*(t2-mean(t2))^2))*(length(t1)-1)/sqrt(length(t1)-1))
cor(t1,t2)
1 - sum((t1-mean(t1)*(t2-mean(t2))))/(sqrt(sum((t1-mean(t1))^2*(t2-mean(t2))^2))*(length(t1)-1)/sqrt(length(t1)-1))
1 - sum((t1-mean(t1)*(t2-mean(t2))))/(sqrt(sum((t1-mean(t1))^2))*sqrt(sum((t2-mean(t2))^2))*(length(t1)-1)/sqrt(length(t1)-1))
sum((t1-mean(t1)*(t2-mean(t2))))/(sqrt(sum((t1-mean(t1))^2))*sqrt(sum((t2-mean(t2))^2))*(length(t1)-1)/sqrt(length(t1)-1))
sum((t1-mean(t1)*(t2-mean(t2))))/(sqrt(sum((t1-mean(t1))^2))*sqrt(sum((t2-mean(t2))^2))*((length(t1)-1)/sqrt(length(t1)-1)))
r <- 1/(length(t1)-1) * sum((t1-mean(t1)*(t2-mean(t2))))
r_ <- r / sqrt(1/(length(t1)-1)*sum((t1-mean(t1))^2)) * sqrt(1/(length(t2)-1)*sum((t2-mean(t2))^2))
r)
r_
r_ <- r / (sqrt(1/(length(t1)-1)*sum((t1-mean(t1))^2)) * sqrt(1/(length(t2)-1)*sum((t2-mean(t2))^2)))
r_
r
r_ <- r / (sqrt(1/(length(t1)-1)*sum((t1-mean(t1))^2)) * sqrt(1/(length(t2)-1)*sum((t2-mean(t2))^2)))
pearson_r(t1,t2)
r_ <- r / (sqrt(1/(length(t1))*sum((t1-mean(t1))^2)) * sqrt(1/(length(t2))*sum((t2-mean(t2))^2)))
r <- 1/(length(t1)) * sum((t1-mean(t1)*(t2-mean(t2))))
r_ <- r / (sqrt(1/(length(t1))*sum((t1-mean(t1))^2)) * sqrt(1/(length(t2))*sum((t2-mean(t2))^2)))
r_
r / sd(t1) / sd(t2)
r / sd(t1)
1.47902/sd(t2)
r
sum((t1-mean(t1))*(t2-mean(t2)))/length(t1)
r_ <- 131.3333 / (sqrt(1/(length(t1))*sum((t1-mean(t1))^2)) * sqrt(1/(length(t2))*sum((t2-mean(t2))^2)))
r_
r <- 1/(length(t1)) * sum((t1-mean(t1)*(t2-mean(t2))))
r
r <- sum((t1-mean(t1)*(t2-mean(t2))))/length(t1)
r
r <- sum((t1-mean(t1))*(t2-mean(t2))))/length(t1)
r <- sum((t1-mean(t1))*(t2-mean(t2)))/length(t1)
r
69+57+65
191/3
mtcars
head(mtcars)
plt
152500/4
7.4*6.8
50.32*44.98
64*29
32*29
75*65/2
sin(30)
tan(230)
224/112
112/224
12/19
7/21
7/21/12/19
12/19/7/21
(7/21)/(12/19)
1/sqrt(1-.34^2)
.64/sqrt(1-.34^2)
sqrt(.72^2/(4-.72^2))
.0094/.0171
160/220
x <- c(10,   2,   6,   12,   14,   15,   15,   24,   15,   25,   3,   12)
mean(x)
sum((x-mean(x))^2)/(length(x)-1)
sd(x)
sqrt(50.75)
sort(x)
median(x)
hist(x)
11/3
mean(12,12,14)
12+12+14
38/3
15+24+25
64/3
1 - pnorm()
1 - pnorm(89,80,6)
?pnorm
75-71.5
3.5/2.1
5/3.3
5.97/15.47
10^(5.97/15.47)
5.97*10^(5.97/15.47)
?log
curve(log(x), from = 0, to = 10)
curve(log(x), from = 1, to = 20)
curve(b^x, from = 0, to = 5)
curve(2^x, from = 0, to = 5)
curve(3^x, from = 0, to = 5)
5.97/2.30
2.3/5.97
log2(2^x)
curve(log2(x^2), from = 0, to = 5)
curve(log2(2^x), from = 0, to = 5)
curve(l2^x, from = 0, to = 5)
curve(2^x, from = 0, to = 5)
curve(1.5^x, from = 0, to = 5)
4.5*1.5
4.5+(4.5*1.5)
1.5^0
1*1.5
1.5*1.5
2.25*1.5
3.375*1.5
3.375*1.5*1.15
3.375*1.5*1.5
20470*.355
pre <- c(450, 800, 1235, 2200, 2458, 3125, 3300, 4100, 4278, 5001, 5222, 5783, 6100, 14750, 18875, 20470)
pre - pre*c(.055, .12, .18, .2025, .2575, .355, .015)
pre - pre*func{i for i in c(.055, .12, .18, .2025, .2575, .355, .015)}
tax <- c(.055, .12, .18, .2025, .2575, .355, .015)
pre - pre*tax[1]
pre - pre*tax[2]
pre - pre*tax[3]
after_tax <- func(vec, tax){
for(i in length(tax){
vec*tax[i]
}
}
after_tax <- func(vec, tax){
for(i in length(tax)){
vec*tax[i]
}
}
after_tax <- function(vec, tax){
for(i in length(tax)){
vec*tax[i]
}
}
after_tax(pre, tax)
func <- function(n){
n^3 + 20*n^2 + 10*n + 1
}
func(1)
func(2)
2^3
8*32
setwd('stats/playground/')
pnorm(900,1500,300)+pnorm(2100,1500,300)
pnorm(900,1500,300)
pnorm(2100,1500,300)
1-pnorm(2100,1500,300)
1ppnorm(900,1500,300)
1-pnorm(900,1500,300)
above2100 <- 1-pnorm(2100,1500,300)
above2100 - 1-pnorm(900,1500,300)
above2100 - (1-pnorm(900,1500,300))
?fitted
(7.8 - 7.47)/(2.41/30)
2.41/30
(7.8 - 7.47)/(2.41/sqrt(30))
(7.8 - 7.47)/(2.41/sqrt(50))
(8.4 - 7.47)/(2.41/sqrt(50))
(8.3 - 7.47)/(2.41/sqrt(50))
library(foreign)
?file.choose
data <- read.spss('~/Documents/Datensatz BA.sav')
head(data)
file.choose()
data <- read.spss('~/Documents/Datensatz BA.sav', to.data.frame = T)
head(data)
dir.create('viktoria')
setwd('viktoria/')
rm(list = ls)
dput(data)
list.files()
ls()
dput(data, file = 'data.R')
list.files()
rm(list = ls())
dget('data.R')
data <- dget('data.R')
class(data)
unclass(data)
df_ba <- data
head(df_ba)
View(df_ba)
mean(df_ba$Alter)
mean(df_ba$Alter, na.rm = T)
class(df_ba$Alter)
unclass(df_ba$Alter)
